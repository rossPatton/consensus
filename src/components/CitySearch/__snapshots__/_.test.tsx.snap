// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/CitySearch default snapshot 1`] = `
ReactTestInstance {
  "_fiber": FiberNode {
    "_debugHookTypes": null,
    "_debugID": 3,
    "_debugIsCurrentlyTiming": false,
    "_debugNeedsRemount": false,
    "_debugOwner": null,
    "_debugSource": null,
    "actualDuration": 0,
    "actualStartTime": -1,
    "alternate": null,
    "child": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 4,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": InnerLoadable {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "mounted": true,
                "promise": Promise {},
                "props": Object {
                  "__chunkExtractor": undefined,
                  "forwardedRef": null,
                  "isLoading": false,
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": InnerLoadable {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "mounted": true,
                "promise": Promise {},
                "props": Object {
                  "__chunkExtractor": undefined,
                  "forwardedRef": null,
                  "isLoading": false,
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": InnerLoadable {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "mounted": true,
                "promise": Promise {},
                "props": Object {
                  "__chunkExtractor": undefined,
                  "forwardedRef": null,
                  "isLoading": false,
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": InnerLoadable {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "mounted": true,
              "promise": Promise {},
              "props": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "refs": Object {},
              "state": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 8,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": InnerLoadable {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "mounted": true,
              "promise": Promise {},
              "props": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "refs": Object {},
              "state": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.forward_ref),
          "load": [Function],
          "preload": [Function],
          "render": [Function],
        },
        "expirationTime": 0,
        "firstEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 8,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": InnerLoadable {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "mounted": true,
            "promise": Promise {},
            "props": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "refs": Object {},
            "state": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 8,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 6,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": InnerLoadable {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "mounted": true,
            "promise": Promise {},
            "props": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "refs": Object {},
            "state": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "memoizedProps": Object {
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 11,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "load": [Function],
          "preload": [Function],
          "render": [Function],
        },
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 1,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 8,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": InnerLoadable {
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "mounted": true,
          "promise": Promise {},
          "props": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "refs": Object {},
          "state": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseQueue": null,
          "baseState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 8,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": InnerLoadable {
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "mounted": true,
          "promise": Promise {},
          "props": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "refs": Object {},
          "state": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseQueue": null,
          "baseState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "memoizedProps": Object {
        "citiesThunk": Object {
          "data": Array [
            Object {
              "country": "United States",
              "countryId": 1,
              "id": 1,
              "name": "New York",
              "region": "New York",
              "regionCode": "ny",
              "regionId": 37,
            },
          ],
          "error": null,
          "isLoading": false,
        },
        "city": "New York",
        "cityId": 16625,
        "geo": Object {
          "city": "New York",
          "countryCode": "us",
          "handle": "new-york",
          "postcode": 10002,
          "region": "New York",
          "regionCode": "ny",
        },
        "getCitiesDispatch": [Function],
        "region": "New York",
        "regionId": 37,
        "session": Object {
          "isAuthenticated": false,
          "profile": Object {
            "region": "New York",
          },
          "qr": Object {},
          "type": "user",
        },
        "showResetButton": true,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "updateState": [MockFunction],
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "citiesThunk": Object {
          "data": Array [
            Object {
              "country": "United States",
              "countryId": 1,
              "id": 1,
              "name": "New York",
              "region": "New York",
              "regionCode": "ny",
              "regionId": 37,
            },
          ],
          "error": null,
          "isLoading": false,
        },
        "city": "New York",
        "cityId": 16625,
        "geo": Object {
          "city": "New York",
          "countryCode": "us",
          "handle": "new-york",
          "postcode": 10002,
          "region": "New York",
          "regionCode": "ny",
        },
        "getCitiesDispatch": [Function],
        "region": "New York",
        "regionId": 37,
        "session": Object {
          "isAuthenticated": false,
          "profile": Object {
            "region": "New York",
          },
          "qr": Object {},
          "type": "user",
        },
        "showResetButton": true,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "updateState": [MockFunction],
      },
      "ref": null,
      "return": [Circular],
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": CitySearchContainer {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "citiesThunk": Object {
            "data": Array [
              Object {
                "country": "United States",
                "countryId": 1,
                "id": 1,
                "name": "New York",
                "region": "New York",
                "regionCode": "ny",
                "regionId": 37,
              },
            ],
            "error": null,
            "isLoading": false,
          },
          "city": "New York",
          "cityId": 16625,
          "geo": Object {
            "city": "New York",
            "countryCode": "us",
            "handle": "new-york",
            "postcode": 10002,
            "region": "New York",
            "regionCode": "ny",
          },
          "getCitiesDispatch": [Function],
          "region": "New York",
          "regionId": 37,
          "session": Object {
            "isAuthenticated": false,
            "profile": Object {
              "region": "New York",
            },
            "qr": Object {},
            "type": "user",
          },
          "showResetButton": true,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          },
          "updateState": [MockFunction],
        },
        "refs": Object {},
        "state": null,
        "updateState": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": null,
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "childExpirationTime": 0,
    "dependencies": null,
    "effectTag": 5,
    "elementType": [Function],
    "expirationTime": 0,
    "firstEffect": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 8,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 7,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": null,
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 5,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "memoizedState": Object {
        "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
        "error": null,
        "loading": true,
        "result": null,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 7,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": InnerLoadable {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "mounted": true,
        "promise": Promise {},
        "props": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "refs": Object {},
        "state": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "index": 0,
    "key": null,
    "lastEffect": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 8,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 7,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": null,
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 5,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "memoizedState": Object {
        "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
        "error": null,
        "loading": true,
        "result": null,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 7,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 5,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 4,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": InnerLoadable {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "mounted": true,
        "promise": Promise {},
        "props": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "refs": Object {},
        "state": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "memoizedProps": Object {
      "city": "New York",
      "cityId": 16625,
      "region": "New York",
      "regionId": 37,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "updateState": [MockFunction],
    },
    "memoizedState": Object {},
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {
      "city": "New York",
      "cityId": 16625,
      "region": "New York",
      "regionId": 37,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "updateState": [MockFunction],
    },
    "ref": null,
    "return": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 1,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 1,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": [Circular],
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 0,
        "elementType": null,
        "expirationTime": 1073741823,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": FiberRootNode {
          "callbackExpirationTime": 0,
          "callbackNode": null,
          "callbackPriority": 90,
          "containerInfo": Object {
            "children": Array [],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "context": Object {},
          "current": [Circular],
          "finishedExpirationTime": 0,
          "finishedWork": null,
          "firstPendingTime": 0,
          "firstSuspendedTime": 0,
          "hydrate": false,
          "interactionThreadID": 1,
          "lastExpiredTime": 0,
          "lastPingedTime": 0,
          "lastSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextKnownPendingLevel": 0,
          "pendingChildren": null,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "tag": 0,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseQueue": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": [Circular],
            "payload": Object {
              "element": <Connect(CitySearchContainer)
                city="New York"
                cityId={16625}
                region="New York"
                regionId={37}
                store={
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  }
                }
                updateState={[MockFunction]}
              />,
            },
            "priority": 97,
            "suspenseConfig": null,
            "tag": 0,
          },
          "baseState": null,
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "child": [Circular],
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 0,
      "elementType": null,
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 8,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 7,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 5,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 4,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": InnerLoadable {
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "mounted": true,
          "promise": Promise {},
          "props": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "refs": Object {},
          "state": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseQueue": null,
          "baseState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <Connect(CitySearchContainer)
          city="New York"
          cityId={16625}
          region="New York"
          regionId={37}
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
          updateState={[MockFunction]}
        />,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": FiberRootNode {
        "callbackExpirationTime": 0,
        "callbackNode": null,
        "callbackPriority": 90,
        "containerInfo": Object {
          "children": Array [],
          "createNodeMock": [Function],
          "tag": "CONTAINER",
        },
        "context": Object {},
        "current": [Circular],
        "finishedExpirationTime": 0,
        "finishedWork": null,
        "firstPendingTime": 0,
        "firstSuspendedTime": 0,
        "hydrate": false,
        "interactionThreadID": 1,
        "lastExpiredTime": 0,
        "lastPingedTime": 0,
        "lastSuspendedTime": 0,
        "memoizedInteractions": Set {},
        "nextKnownPendingLevel": 0,
        "pendingChildren": null,
        "pendingContext": null,
        "pendingInteractionMap": Map {},
        "pingCache": null,
        "tag": 0,
        "timeoutHandle": -1,
      },
      "tag": 3,
      "treeBaseDuration": 0,
      "type": null,
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": Object {
          "element": <Connect(CitySearchContainer)
            city="New York"
            cityId={16625}
            region="New York"
            regionId={37}
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
            updateState={[MockFunction]}
          />,
        },
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "selfBaseDuration": 0,
    "sibling": null,
    "stateNode": Connect {
      "__reactInternalMemoizedMaskedChildContext": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedMergedChildContext": Object {
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedUnmaskedChildContext": Object {},
      "_reactInternalFiber": [Circular],
      "_reactInternalInstance": Object {},
      "context": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "notifyNestedSubs": [Function],
      "props": Object {
        "city": "New York",
        "cityId": 16625,
        "region": "New York",
        "regionId": 37,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "updateState": [MockFunction],
      },
      "propsMode": true,
      "refs": Object {},
      "renderCount": 0,
      "selector": Object {
        "error": null,
        "props": Object {
          "citiesThunk": Object {
            "data": Array [
              Object {
                "country": "United States",
                "countryId": 1,
                "id": 1,
                "name": "New York",
                "region": "New York",
                "regionCode": "ny",
                "regionId": 37,
              },
            ],
            "error": null,
            "isLoading": false,
          },
          "city": "New York",
          "cityId": 16625,
          "geo": Object {
            "city": "New York",
            "countryCode": "us",
            "handle": "new-york",
            "postcode": 10002,
            "region": "New York",
            "regionCode": "ny",
          },
          "getCitiesDispatch": [Function],
          "region": "New York",
          "regionId": 37,
          "session": Object {
            "isAuthenticated": false,
            "profile": Object {
              "region": "New York",
            },
            "qr": Object {},
            "type": "user",
          },
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "updateState": [MockFunction],
        },
        "run": [Function],
        "shouldComponentUpdate": false,
      },
      "setWrappedInstance": [Function],
      "state": Object {},
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
      "version": 0,
    },
    "tag": 1,
    "treeBaseDuration": 0,
    "type": [Function],
    "updateQueue": Object {
      "baseQueue": null,
      "baseState": Object {},
      "effects": null,
      "shared": Object {
        "pending": null,
      },
    },
  },
}
`;

exports[`components/CitySearch renders with custom label 1`] = `null`;

exports[`components/CitySearch renders with empty session region (fall back to geo region) 1`] = `null`;

exports[`components/CitySearch renders with null session and geo region 1`] = `null`;

exports[`components/CitySearch snapshot (different props) 1`] = `
ReactTestInstance {
  "_fiber": FiberNode {
    "_debugHookTypes": null,
    "_debugID": 162,
    "_debugIsCurrentlyTiming": false,
    "_debugNeedsRemount": false,
    "_debugOwner": null,
    "_debugSource": null,
    "actualDuration": 0,
    "actualStartTime": -1,
    "alternate": null,
    "child": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 163,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 164,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 166,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 167,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": InnerLoadable {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "mounted": true,
                "promise": Promise {},
                "props": Object {
                  "__chunkExtractor": undefined,
                  "forwardedRef": null,
                  "isLoading": false,
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 167,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": InnerLoadable {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "mounted": true,
                "promise": Promise {},
                "props": Object {
                  "__chunkExtractor": undefined,
                  "forwardedRef": null,
                  "isLoading": false,
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 167,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": InnerLoadable {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "mounted": true,
                "promise": Promise {},
                "props": Object {
                  "__chunkExtractor": undefined,
                  "forwardedRef": null,
                  "isLoading": false,
                  "render": [Function],
                },
                "refs": Object {},
                "state": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                  "error": null,
                  "loading": true,
                  "result": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 167,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 166,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 166,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": InnerLoadable {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "mounted": true,
              "promise": Promise {},
              "props": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "refs": Object {},
              "state": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 167,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 166,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 166,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": null,
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": InnerLoadable {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "mounted": true,
              "promise": Promise {},
              "props": Object {
                "__chunkExtractor": undefined,
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "refs": Object {},
              "state": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
                "error": null,
                "loading": true,
                "result": null,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.forward_ref),
          "load": [Function],
          "preload": [Function],
          "render": [Function],
        },
        "expirationTime": 0,
        "firstEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 167,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 166,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 166,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": InnerLoadable {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "mounted": true,
            "promise": Promise {},
            "props": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "refs": Object {},
            "state": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 167,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 166,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 166,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": null,
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 165,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "forwardedRef": null,
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": InnerLoadable {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "mounted": true,
            "promise": Promise {},
            "props": Object {
              "__chunkExtractor": undefined,
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "refs": Object {},
            "state": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
              "error": null,
              "loading": true,
              "result": null,
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "memoizedProps": Object {
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 11,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "load": [Function],
          "preload": [Function],
          "render": [Function],
        },
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 1,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 167,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 166,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 166,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": InnerLoadable {
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "mounted": true,
          "promise": Promise {},
          "props": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "refs": Object {},
          "state": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseQueue": null,
          "baseState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 167,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 166,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 166,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": InnerLoadable {
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "mounted": true,
          "promise": Promise {},
          "props": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "refs": Object {},
          "state": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseQueue": null,
          "baseState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "memoizedProps": Object {
        "citiesThunk": Object {
          "data": Array [
            Object {
              "country": "United States",
              "countryId": 1,
              "id": 1,
              "name": "New York",
              "region": "New York",
              "regionCode": "ny",
              "regionId": 37,
            },
          ],
          "error": null,
          "isLoading": false,
        },
        "city": "New York",
        "cityId": 16625,
        "geo": Object {
          "city": "New York",
          "countryCode": "us",
          "handle": "new-york",
          "postcode": 10002,
          "region": "New York",
          "regionCode": "ny",
        },
        "getCitiesDispatch": [Function],
        "region": "New York",
        "regionId": 37,
        "session": Object {
          "isAuthenticated": false,
          "profile": Object {
            "region": "New York",
          },
          "qr": Object {},
          "type": "user",
        },
        "showResetButton": true,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "updateState": [MockFunction],
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "citiesThunk": Object {
          "data": Array [
            Object {
              "country": "United States",
              "countryId": 1,
              "id": 1,
              "name": "New York",
              "region": "New York",
              "regionCode": "ny",
              "regionId": 37,
            },
          ],
          "error": null,
          "isLoading": false,
        },
        "city": "New York",
        "cityId": 16625,
        "geo": Object {
          "city": "New York",
          "countryCode": "us",
          "handle": "new-york",
          "postcode": 10002,
          "region": "New York",
          "regionCode": "ny",
        },
        "getCitiesDispatch": [Function],
        "region": "New York",
        "regionId": 37,
        "session": Object {
          "isAuthenticated": false,
          "profile": Object {
            "region": "New York",
          },
          "qr": Object {},
          "type": "user",
        },
        "showResetButton": true,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
        "updateState": [MockFunction],
      },
      "ref": null,
      "return": [Circular],
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": CitySearchContainer {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "citiesThunk": Object {
            "data": Array [
              Object {
                "country": "United States",
                "countryId": 1,
                "id": 1,
                "name": "New York",
                "region": "New York",
                "regionCode": "ny",
                "regionId": 37,
              },
            ],
            "error": null,
            "isLoading": false,
          },
          "city": "New York",
          "cityId": 16625,
          "geo": Object {
            "city": "New York",
            "countryCode": "us",
            "handle": "new-york",
            "postcode": 10002,
            "region": "New York",
            "regionCode": "ny",
          },
          "getCitiesDispatch": [Function],
          "region": "New York",
          "regionId": 37,
          "session": Object {
            "isAuthenticated": false,
            "profile": Object {
              "region": "New York",
            },
            "qr": Object {},
            "type": "user",
          },
          "showResetButton": true,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "storeSubscription": Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": [Function],
          },
          "updateState": [MockFunction],
        },
        "refs": Object {},
        "state": null,
        "updateState": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": null,
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "childExpirationTime": 0,
    "dependencies": null,
    "effectTag": 5,
    "elementType": [Function],
    "expirationTime": 0,
    "firstEffect": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 167,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 166,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": null,
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 5,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "memoizedState": Object {
        "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
        "error": null,
        "loading": true,
        "result": null,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 166,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": InnerLoadable {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "mounted": true,
        "promise": Promise {},
        "props": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "refs": Object {},
        "state": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "index": 0,
    "key": null,
    "lastEffect": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 167,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 166,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": null,
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 5,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "memoizedState": Object {
        "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
        "error": null,
        "loading": true,
        "result": null,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "__chunkExtractor": undefined,
        "forwardedRef": null,
        "isLoading": false,
        "render": [Function],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 166,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "dependencies": Object {
          "expirationTime": 0,
          "firstContext": Object {
            "context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
            "next": null,
            "observedBits": 1073741823,
          },
          "responders": null,
        },
        "effectTag": 1,
        "elementType": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": [Function],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 165,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 164,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 163,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "citiesThunk": Object {
                  "data": Array [
                    Object {
                      "country": "United States",
                      "countryId": 1,
                      "id": 1,
                      "name": "New York",
                      "region": "New York",
                      "regionCode": "ny",
                      "regionId": 37,
                    },
                  ],
                  "error": null,
                  "isLoading": false,
                },
                "city": "New York",
                "cityId": 16625,
                "geo": Object {
                  "city": "New York",
                  "countryCode": "us",
                  "handle": "new-york",
                  "postcode": 10002,
                  "region": "New York",
                  "regionCode": "ny",
                },
                "getCitiesDispatch": [Function],
                "region": "New York",
                "regionId": 37,
                "session": Object {
                  "isAuthenticated": false,
                  "profile": Object {
                    "region": "New York",
                  },
                  "qr": Object {},
                  "type": "user",
                },
                "showResetButton": true,
                "store": Object {
                  "clearActions": [Function],
                  "dispatch": [Function],
                  "getActions": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                },
                "storeSubscription": Subscription {
                  "listeners": Object {
                    "clear": [Function],
                    "get": [Function],
                    "notify": [Function],
                    "subscribe": [Function],
                  },
                  "onStateChange": [Function],
                  "parentSub": undefined,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "unsubscribe": [Function],
                },
                "updateState": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": CitySearchContainer {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "refs": Object {},
                "state": null,
                "updateState": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 11,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "load": [Function],
              "preload": [Function],
              "render": [Function],
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 0,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": null,
        "tag": 9,
        "treeBaseDuration": 0,
        "type": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": [Circular],
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": null,
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": InnerLoadable {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "mounted": true,
        "promise": Promise {},
        "props": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "refs": Object {},
        "state": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 1,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "memoizedProps": Object {
      "city": "New York",
      "cityId": 16625,
      "region": "New York",
      "regionId": 37,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "updateState": [MockFunction],
    },
    "memoizedState": Object {},
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {
      "city": "New York",
      "cityId": 16625,
      "region": "New York",
      "regionId": 37,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "updateState": [MockFunction],
    },
    "ref": null,
    "return": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 160,
      "_debugIsCurrentlyTiming": false,
      "_debugNeedsRemount": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 160,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": [Circular],
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 0,
        "elementType": null,
        "expirationTime": 1073741823,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": FiberRootNode {
          "callbackExpirationTime": 0,
          "callbackNode": null,
          "callbackPriority": 90,
          "containerInfo": Object {
            "children": Array [],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "context": Object {},
          "current": [Circular],
          "finishedExpirationTime": 0,
          "finishedWork": null,
          "firstPendingTime": 0,
          "firstSuspendedTime": 0,
          "hydrate": false,
          "interactionThreadID": 2,
          "lastExpiredTime": 0,
          "lastPingedTime": 0,
          "lastSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextKnownPendingLevel": 0,
          "pendingChildren": null,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "pingCache": null,
          "tag": 0,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseQueue": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": [Circular],
            "payload": Object {
              "element": <Connect(CitySearchContainer)
                city="New York"
                cityId={16625}
                region="New York"
                regionId={37}
                store={
                  Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  }
                }
                updateState={[MockFunction]}
              />,
            },
            "priority": 97,
            "suspenseConfig": null,
            "tag": 0,
          },
          "baseState": null,
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "child": [Circular],
      "childExpirationTime": 0,
      "dependencies": null,
      "effectTag": 0,
      "elementType": null,
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 167,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 166,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "memoizedState": Object {
          "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
          "error": null,
          "loading": true,
          "result": null,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "__chunkExtractor": undefined,
          "forwardedRef": null,
          "isLoading": false,
          "render": [Function],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 166,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": Object {
            "expirationTime": 0,
            "firstContext": Object {
              "context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
              },
              "next": null,
              "observedBits": 1073741823,
            },
            "responders": null,
          },
          "effectTag": 1,
          "elementType": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": [Function],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": [Function],
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 165,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "forwardedRef": null,
              "isLoading": false,
              "render": [Function],
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 164,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isLoading": false,
                "render": [Function],
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 163,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "citiesThunk": Object {
                    "data": Array [
                      Object {
                        "country": "United States",
                        "countryId": 1,
                        "id": 1,
                        "name": "New York",
                        "region": "New York",
                        "regionCode": "ny",
                        "regionId": 37,
                      },
                    ],
                    "error": null,
                    "isLoading": false,
                  },
                  "city": "New York",
                  "cityId": 16625,
                  "geo": Object {
                    "city": "New York",
                    "countryCode": "us",
                    "handle": "new-york",
                    "postcode": 10002,
                    "region": "New York",
                    "regionCode": "ny",
                  },
                  "getCitiesDispatch": [Function],
                  "region": "New York",
                  "regionId": 37,
                  "session": Object {
                    "isAuthenticated": false,
                    "profile": Object {
                      "region": "New York",
                    },
                    "qr": Object {},
                    "type": "user",
                  },
                  "showResetButton": true,
                  "store": Object {
                    "clearActions": [Function],
                    "dispatch": [Function],
                    "getActions": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                  },
                  "storeSubscription": Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "unsubscribe": [Function],
                  },
                  "updateState": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": CitySearchContainer {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "citiesThunk": Object {
                      "data": Array [
                        Object {
                          "country": "United States",
                          "countryId": 1,
                          "id": 1,
                          "name": "New York",
                          "region": "New York",
                          "regionCode": "ny",
                          "regionId": 37,
                        },
                      ],
                      "error": null,
                      "isLoading": false,
                    },
                    "city": "New York",
                    "cityId": 16625,
                    "geo": Object {
                      "city": "New York",
                      "countryCode": "us",
                      "handle": "new-york",
                      "postcode": 10002,
                      "region": "New York",
                      "regionCode": "ny",
                    },
                    "getCitiesDispatch": [Function],
                    "region": "New York",
                    "regionId": 37,
                    "session": Object {
                      "isAuthenticated": false,
                      "profile": Object {
                        "region": "New York",
                      },
                      "qr": Object {},
                      "type": "user",
                    },
                    "showResetButton": true,
                    "store": Object {
                      "clearActions": [Function],
                      "dispatch": [Function],
                      "getActions": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                    },
                    "storeSubscription": Subscription {
                      "listeners": Object {
                        "clear": [Function],
                        "get": [Function],
                        "notify": [Function],
                        "subscribe": [Function],
                      },
                      "onStateChange": [Function],
                      "parentSub": undefined,
                      "store": Object {
                        "clearActions": [Function],
                        "dispatch": [Function],
                        "getActions": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                      },
                      "unsubscribe": [Function],
                    },
                    "updateState": [MockFunction],
                  },
                  "refs": Object {},
                  "state": null,
                  "updateState": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 11,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "load": [Function],
                "preload": [Function],
                "render": [Function],
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": null,
          "tag": 9,
          "treeBaseDuration": 0,
          "type": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": [Circular],
              "Provider": Object {
                "$$typeof": Symbol(react.provider),
                "_context": [Circular],
              },
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": InnerLoadable {
          "_reactInternalFiber": [Circular],
          "_reactInternalInstance": Object {},
          "context": Object {},
          "mounted": true,
          "promise": Promise {},
          "props": Object {
            "__chunkExtractor": undefined,
            "forwardedRef": null,
            "isLoading": false,
            "render": [Function],
          },
          "refs": Object {},
          "state": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseQueue": null,
          "baseState": Object {
            "cacheKey": "/Users/ross/Developer/consensus/src/containers/GenericLoader/index.tsx",
            "error": null,
            "loading": true,
            "result": null,
          },
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <Connect(CitySearchContainer)
          city="New York"
          cityId={16625}
          region="New York"
          regionId={37}
          store={
            Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            }
          }
          updateState={[MockFunction]}
        />,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": FiberRootNode {
        "callbackExpirationTime": 0,
        "callbackNode": null,
        "callbackPriority": 90,
        "containerInfo": Object {
          "children": Array [],
          "createNodeMock": [Function],
          "tag": "CONTAINER",
        },
        "context": Object {},
        "current": [Circular],
        "finishedExpirationTime": 0,
        "finishedWork": null,
        "firstPendingTime": 0,
        "firstSuspendedTime": 0,
        "hydrate": false,
        "interactionThreadID": 2,
        "lastExpiredTime": 0,
        "lastPingedTime": 0,
        "lastSuspendedTime": 0,
        "memoizedInteractions": Set {},
        "nextKnownPendingLevel": 0,
        "pendingChildren": null,
        "pendingContext": null,
        "pendingInteractionMap": Map {},
        "pingCache": null,
        "tag": 0,
        "timeoutHandle": -1,
      },
      "tag": 3,
      "treeBaseDuration": 0,
      "type": null,
      "updateQueue": Object {
        "baseQueue": null,
        "baseState": Object {
          "element": <Connect(CitySearchContainer)
            city="New York"
            cityId={16625}
            region="New York"
            regionId={37}
            store={
              Object {
                "clearActions": [Function],
                "dispatch": [Function],
                "getActions": [Function],
                "getState": [Function],
                "replaceReducer": [Function],
                "subscribe": [Function],
              }
            }
            updateState={[MockFunction]}
          />,
        },
        "effects": null,
        "shared": Object {
          "pending": null,
        },
      },
    },
    "selfBaseDuration": 0,
    "sibling": null,
    "stateNode": Connect {
      "__reactInternalMemoizedMaskedChildContext": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedMergedChildContext": Object {
        "storeSubscription": undefined,
      },
      "__reactInternalMemoizedUnmaskedChildContext": Object {},
      "_reactInternalFiber": [Circular],
      "_reactInternalInstance": Object {},
      "context": Object {
        "store": undefined,
        "storeSubscription": undefined,
      },
      "notifyNestedSubs": [Function],
      "props": Object {
        "city": "New York",
        "cityId": 16625,
        "region": "New York",
        "regionId": 37,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "updateState": [MockFunction],
      },
      "propsMode": true,
      "refs": Object {},
      "renderCount": 0,
      "selector": Object {
        "error": null,
        "props": Object {
          "citiesThunk": Object {
            "data": Array [
              Object {
                "country": "United States",
                "countryId": 1,
                "id": 1,
                "name": "New York",
                "region": "New York",
                "regionCode": "ny",
                "regionId": 37,
              },
            ],
            "error": null,
            "isLoading": false,
          },
          "city": "New York",
          "cityId": 16625,
          "geo": Object {
            "city": "New York",
            "countryCode": "us",
            "handle": "new-york",
            "postcode": 10002,
            "region": "New York",
            "regionCode": "ny",
          },
          "getCitiesDispatch": [Function],
          "region": "New York",
          "regionId": 37,
          "session": Object {
            "isAuthenticated": false,
            "profile": Object {
              "region": "New York",
            },
            "qr": Object {},
            "type": "user",
          },
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "updateState": [MockFunction],
        },
        "run": [Function],
        "shouldComponentUpdate": false,
      },
      "setWrappedInstance": [Function],
      "state": Object {},
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
      "version": 0,
    },
    "tag": 1,
    "treeBaseDuration": 0,
    "type": [Function],
    "updateQueue": Object {
      "baseQueue": null,
      "baseState": Object {},
      "effects": null,
      "shared": Object {
        "pending": null,
      },
    },
  },
}
`;
